name: CI (Security Focused)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  backend-ci:
    name: Backend - audit, lint, test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Audit dependencies (prod, fail on high)
        continue-on-error: ${{ github.event_name == 'pull_request' }}
        run: |
          npm audit --production --audit-level=high || {
            echo "Dependency audit found high severity issues" >&2; exit 1; }

      - name: Lint (if configured)
        run: |
          if npm run | grep -qE '^\s*lint\s'; then npm run lint; else echo "No lint script"; fi

      - name: Run tests (if configured)
        env:
          CI: true
        run: |
          if npm run | grep -qE '^\s*test\s'; then npm test --silent; else echo "No test script"; fi

  frontend-ci:
    name: Frontend - audit, lint, test, build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci

      - name: Audit dependencies (prod, fail on high)
        continue-on-error: ${{ github.event_name == 'pull_request' }}
        run: |
          npm audit --production --audit-level=high || {
            echo "Dependency audit found high risk security issues" >&2; exit 1; }

      - name: Lint (if configured)
        run: |
          if npm run | grep -qE '^\s*lint\s'; then npm run lint; else echo "No lint script"; fi

      - name: Run tests (if configured)
        env:
          CI: true
        run: |
          if npm run | grep -qE '^\s*test\s'; then npm test --silent; else echo "No test script"; fi

      - name: Build (if configured)
        run: |
          if npm run | grep -qE '^\s*build\s'; then npm run build; else echo "No build script"; fi

